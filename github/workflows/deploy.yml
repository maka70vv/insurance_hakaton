name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DEBUG: 1
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
          envkey_SQL_ENGINE: ${{ secrets.SQL_ENGINE }}
          envkey_SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
          envkey_SQL_USER: ${{ secrets.SQL_USER }}
          envkey_SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          envkey_SQL_HOST: ${{ secrets.SQL_HOST }}
          envkey_SQL_PORT: ${{ secrets.SQL_PORT }}
          envkey_DATABASE: ${{ secrets.DATABASE_PARAM }}
          file_name: .env.prod
          fail_on_empty: false
          sort_keys: false
      - name: Make envfile db
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_USER: ${{ secrets.SQL_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.SQL_DATABASE }}
          file_name: .env.prod.db
          fail_on_empty: false
          sort_keys: false

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .

      - name: Tag Docker Image
        run: docker tag ${{ secrets.DOCKER_IMAGE_NAME}} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{secrets.SSH_PORT}}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ secrets.PROJECT_DIRECTORY }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker-compose -f docker-compose.prod.yml up --build -d
